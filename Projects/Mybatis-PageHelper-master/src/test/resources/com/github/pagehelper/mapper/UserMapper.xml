<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ The MIT License (MIT)
  ~
  ~ Copyright (c) 2014-2017 abel533@gmail.com
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in
  ~ all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  ~ THE SOFTWARE.
  -->

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.pagehelper.mapper.UserMapper">
    <cache/>
    <select id="selectAll" resultType="User">
        select * from user order by id -- comment
    </select>
    <select id="selectAll_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
    </select>

    <select id="selectGreterThanId" resultType="User">
        select * from user where id &gt;#{id} order by id -- comment
    </select>
    <select id="selectGreterThanId_TESTCOUNT" resultType="Long">
        select count(distinct id) from user where id &gt;#{id}
    </select>

    <select id="selectGreterThanIdAndNotEquelName" resultType="User">
        select a.* from user a left join user b on a.id = b.id where a.id &gt;#{id} and b.name &lt;&gt;
        #{name} order by a.id
    </select>
    <select id="selectGreterThanIdAndNotEquelName_TESTCOUNT" resultType="Long">
        select count(distinct a.id) from user a left join user b on a.id = b.id where a.id &gt;#{id} and b.name &lt;&gt;
        #{name}
    </select>

    <select id="selectAllOrderby" resultType="com.github.pagehelper.model.User">
        select * from user order by py desc
    </select>
    <select id="selectAllOrderby_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
    </select>

    <select id="selectAllOrderByParams" resultType="com.github.pagehelper.model.User">
        select * from user order by ${order1} desc,${order2} asc
    </select>
    <select id="selectAllOrderByParams_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
    </select>

    <select id="selectAllOrderByMap" resultType="com.github.pagehelper.model.User">
        select * from ${tableName} where id &lt;&gt; #{order1} and id &lt;&gt; #{order2} order by id
    </select>
    <select id="selectAllOrderByMap_TESTCOUNT" resultType="Long">
        select count(distinct id) from user where id &lt;&gt; #{order1} and id &lt;&gt; #{order2}
    </select>

    <select id="selectAllOrderByList" resultType="com.github.pagehelper.model.User">
        select * from user where id not in
        <foreach collection="list" item="par" separator="," open="(" close=")">
            #{par}
        </foreach>
        order by id
    </select>
    <select id="selectAllOrderByList_TESTCOUNT" resultType="Long">
        select count(distinct id) from user where id not in
        <foreach collection="list" item="par" separator="," open="(" close=")">
            #{par}
        </foreach>
    </select>

    <select id="selectAllOrderByArray" resultType="com.github.pagehelper.model.User">
        select * from user where id not in
        <foreach collection="array" item="par" separator="," open="(" close=")">
            #{par}
        </foreach>
        order by id
    </select>
    <select id="selectAllOrderByArray_TESTCOUNT" resultType="Long">
        select count(distinct id) from user where id not in
        <foreach collection="array" item="par" separator="," open="(" close=")">
            #{par}
        </foreach>
    </select>

    <select id="selectIf" resultType="com.github.pagehelper.model.User">
        select * from user
        <if test="@com.github.pagehelper.util.Ognl@isNotNull(id)">
            <!--<if test="id!=null">-->
            where id &gt; #{id}
        </if>
        order by id
    </select>
    <select id="selectIf_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
        <if test="@com.github.pagehelper.util.Ognl@isNotNull(id)">
            <!--<if test="id!=null">-->
            where id &gt; #{id}
        </if>
    </select>

    <select id="selectIf3" parameterType="User" resultType="com.github.pagehelper.model.User">
        select * from user
        <if test="id > 0">
            where id &gt; #{id}
        </if>
        order by id
    </select>
    <select id="selectIf3_TESTCOUNT" parameterType="User" resultType="Long">
        select count(distinct id) from user
        <if test="id > 0">
            where id &gt; #{id}
        </if>
    </select>

    <select id="selectIf2" resultType="com.github.pagehelper.model.User">
        select * from user where id &gt; #{id1}
        <if test="id2!=null">
            and id &gt; #{id2}
        </if>
    </select>
    <select id="selectIf2_TESTCOUNT" resultType="Long">
        select count(distinct id) from user where id &gt; #{id1}
        <if test="id2!=null">
            and id &gt; #{id2}
        </if>
    </select>

    <select id="selectIf2List" resultType="com.github.pagehelper.model.User">
        select * from user
        <where>
            <if test="id1!=null and id1.size>0">
                id not in
                <foreach collection="id1" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="id2!=null and id2.size>0">
                and id not in
                <foreach collection="id2" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
        order by id
    </select>
    <select id="selectIf2List_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
        <where>
            <if test="id1!=null and id1.size>0">
                id not in
                <foreach collection="id1" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="id2!=null and id2.size>0">
                and id not in
                <foreach collection="id2" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <select id="selectIf2ListAndOrder" resultType="com.github.pagehelper.model.User">
        select * from user
        <where>
            <if test="id1!=null and id1.size>0">
                id not in
                <foreach collection="id1" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="id2!=null and id2.size>0">
                and id not in
                <foreach collection="id2" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
        <if test="order!=null and order!=''">
            order by ${order}
        </if>
        <if test="order==null or order==''">
            order by id
        </if>
    </select>
    <select id="selectIf2ListAndOrder_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
        <where>
            <if test="id1!=null and id1.size>0">
                id not in
                <foreach collection="id1" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
            <if test="id2!=null and id2.size>0">
                and id not in
                <foreach collection="id2" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <select id="selectChoose" resultType="com.github.pagehelper.model.User">
        select * from user
        <where>
            <choose>
                <when test="id1!=null">
                    id &lt;&gt; #{id1}
                </when>
                <otherwise>
                    and id &lt;&gt; #{id2}
                </otherwise>
            </choose>
        </where>
        order by id
    </select>
    <select id="selectChoose_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
        <where>
            <choose>
                <when test="id1!=null">
                    id &lt;&gt; #{id1}
                </when>
                <otherwise>
                    and id &lt;&gt; #{id2}
                </otherwise>
            </choose>
        </where>
    </select>

    <select id="selectLike" resultType="com.github.pagehelper.model.User">
        select * from user where 1=1
        <if test="name!=null and name!=''">
            and lower(name) like '%${name}%'
        </if>
        order by id
    </select>
    <select id="selectLike_TESTCOUNT" resultType="Long">
        select count(distinct id) from user where 1=1
        <if test="name!=null and name!=''">
            and lower(name) like '%${name}%'
        </if>
    </select>

    <select id="selectByMap" resultType="com.github.pagehelper.model.User">
        select * from user where 1=1
        <if test="name!=null and name !=''">
            and name= #{name}
        </if>
        <if test="py!=null and py !=''">
            and py= #{py}
        </if>
    </select>
    <select id="selectByMap_TESTCOUNT" resultType="Long">
        select count(distinct id) from user where 1=1
        <if test="name!=null and name !=''">
            and name= #{name}
        </if>
        <if test="py!=null and py !=''">
            and py= #{py}
        </if>
    </select>

    <select id="selectByOrder2" resultType="com.github.pagehelper.model.User">
        select * from user order by ${order}
    </select>
    <select id="selectByOrder2_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
    </select>

    <select id="selectUnion" resultType="com.github.pagehelper.model.User">
        select id,name,py from user where id &gt;180
        union
        select id,name,py from user where id &lt;=10 order by id
    </select>
    <select id="selectUnion_TESTCOUNT" resultType="Long">
        select count(distinct id) from (
        select id,name,py from user where id &gt;180
        union
        select id,name,py from user where id &lt;=10) temp
    </select>

    <select id="selectLeftjoin" resultType="com.github.pagehelper.model.User">
        select a.id,b.name,a.py from user a
        left join user b on a.id = b.id
        order by a.id
    </select>
    <select id="selectLeftjoin_TESTCOUNT" resultType="Long">
        select count(distinct a.id) from user a
        left join user b on a.id = b.id
    </select>

    <select id="selectWith" resultType="com.github.pagehelper.model.User">
        with rs as (select id from user where id>150) select * from user where id in (select * from rs) order by
        id
    </select>
    <select id="selectWith_TESTCOUNT" resultType="Long">
        with rs as (select id from user where id>150) select count(distinct id) from user where id in (select * from rs)
    </select>

    <!--select column中包含参数时-->
    <select id="selectColumns" resultType="com.github.pagehelper.model.User">
        select
        <if test="columns==null or columns.length == 0">
            *
        </if>
        <if test="columns!=null and columns.length > 0">
            <foreach collection="columns" item="column" separator=",">
                ${column}
            </foreach>
        </if>
        from user order by id
    </select>
    <!--select column中包含参数时-->
    <select id="selectColumns_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
    </select>

    <select id="selectMULId" resultType="com.github.pagehelper.model.User">
        select id * #{mul} as id,name,py from user order by id
    </select>
    <select id="selectMULId_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
    </select>

    <select id="selectGroupBy" resultType="com.github.pagehelper.model.User">
        /*keep orderby*/select name,py,count(id) id from user
        group by name,py
        order by name,py
    </select>
    <select id="selectGroupBy_TESTCOUNT" resultType="Long">
        select count(distinct name) from (
        select name,py,count(id) id from user
        group by name,py
        order by name,py) as temp
    </select>

    <select id="selectByWhereMap" resultType="com.github.pagehelper.model.User">
        select * from user
        <where>
            <foreach collection="map" item="val" index="key" separator="and">
                ${key} = #{val}
            </foreach>
        </where>
        order by id
    </select>
    <select id="selectByWhereMap_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
        <where>
            <foreach collection="map" item="val" index="key" separator="and">
                ${key} = #{val}
            </foreach>
        </where>
    </select>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <select id="selectByExample" resultType="com.github.pagehelper.model.User"
            parameterType="com.github.pagehelper.model.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        Id, name, py
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="orderByClause == null">
            order by id
        </if>
    </select>
    <select id="selectByExample_TESTCOUNT" resultType="Long"
            parameterType="com.github.pagehelper.model.UserExample">
        select
        count(
        <if test="distinct">
            distinct
        </if>
        Id)
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <select id="selectDistinct" resultType="com.github.pagehelper.model.User">
        select distinct SUBSTR(name,1,1) name from user
    </select>
    <select id="selectDistinct_TESTCOUNT" resultType="Long">
        select count(distinct SUBSTR(name,1,1)) from user
    </select>

    <select id="selectExists" resultType="com.github.pagehelper.model.User">
        select * from user a where exists(select 1 from user b where a.id = b.id and b.id >100)
    </select>
    <select id="selectExists_TESTCOUNT" resultType="Long">
        select count(distinct id) from user a where exists(select 1 from user b where a.id = b.id and b.id >100)
    </select>

    <select id="select1" resultType="com.github.pagehelper.model.User">
        select * from user a where 1=1
        <if test="user!=null and user.name !=null and user.name!=null">
            and name = #{user.name}
        </if>
    </select>
    <select id="select1_TESTCOUNT" resultType="Long">
        select count(distinct id) from user a where 1=1
        <if test="user!=null and user.name !=null and user.name!=null">
            and name = #{user.name}
        </if>
    </select>

    <select id="selectByPageNumSize" resultType="com.github.pagehelper.model.User">
        select * from user
    </select>
    <select id="selectByPageNumSize_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
    </select>

    <select id="selectByPageNumSizeOrderBy" resultType="com.github.pagehelper.model.User">
        select * from user
    </select>
    <select id="selectByPageNumSizeOrderBy_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
    </select>

    <select id="selectByOrderBy" resultType="com.github.pagehelper.model.User">
        select * from user
    </select>
    <select id="selectByOrderBy_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
    </select>

    <select id="selectByQueryModel" resultType="com.github.pagehelper.model.User">
        select * from user
    </select>
    <select id="selectByQueryModel_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
    </select>

    <select id="selectByIdList" resultType="com.github.pagehelper.model.User">
        select * from user
        <if test="idList != null and idList.size()>0">
            where id in
            <foreach collection="idList" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
    </select>
    <select id="selectByIdList_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
        <if test="idList != null and idList.size()>0">
            where id in
            <foreach collection="idList" item="id" open="(" close=")" separator=",">
              #{id}
            </foreach>
        </if>
    </select>

    <select id="selectByIdList2" resultType="com.github.pagehelper.model.User">
        <foreach collection="idList" item="id" separator="union all">
            select * from user where id = #{id}
        </foreach>
    </select>
    <select id="selectByIdList2_TESTCOUNT" resultType="Long">
        select count(distinct id) from(
        <foreach collection="idList" item="id" separator="union all">
            select * from user where id = #{id}
        </foreach>
        ) temp
    </select>

    <select id="execute" resultType="map">
        ${sql}
    </select>

    <resultMap id="collectionMap" type="com.github.pagehelper.model.User">
        <id column="id" property="id"/>
        <collection property="users" column="{id=id}" ofType="com.github.pagehelper.model.User"
                    select="selectGreterThanId"/>
    </resultMap>
    
    <select id="selectCollectionMap" resultMap="collectionMap">
        select * from user
    </select>
    <select id="selectCollectionMap_TESTCOUNT" resultType="Long">
        select count(distinct id) from user
    </select>

    <resultMap id="codeMap" type="com.github.pagehelper.model.UserCode">
        <id column="id" property="id"/>
        <result column="py" property="py" typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
    </resultMap>

    <select id="selectByCode" resultMap="codeMap">
        select * from user where py = #{code, typeHandler=org.apache.ibatis.type.EnumTypeHandler}
    </select>
    <select id="selectByCode_TESTCOUNT" resultType="Long">
        select count(distinct id) from user where py = #{code, typeHandler=org.apache.ibatis.type.EnumTypeHandler}
    </select>
</mapper>
